"""rename_name_to_value

Revision ID: 006
Revises: 005
Create Date: 2024-01-26 23:05:14.198014

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '006'
down_revision: Union[str, None] = '005'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('direction', sa.Column('value', sa.String(length=50), nullable=False))
    op.drop_constraint('direction_name_key', 'direction', type_='unique')
    op.create_unique_constraint(None, 'direction', ['value'])
    op.drop_column('direction', 'name')
    op.add_column('grade', sa.Column('value', sa.String(length=50), nullable=False))
    op.drop_constraint('grade_name_key', 'grade', type_='unique')
    op.create_unique_constraint(None, 'grade', ['value'])
    op.drop_column('grade', 'name')
    op.add_column('skill', sa.Column('value', sa.String(length=30), nullable=False))
    op.drop_constraint('skill_name_key', 'skill', type_='unique')
    op.create_unique_constraint(None, 'skill', ['value'])
    op.drop_column('skill', 'name')
    op.add_column('status', sa.Column('value', sa.String(length=50), nullable=False))
    op.drop_constraint('status_name_key', 'status', type_='unique')
    op.create_unique_constraint(None, 'status', ['value'])
    op.drop_column('status', 'name')
    op.add_column('task', sa.Column('link', sa.String(length=100), nullable=True))
    op.add_column('template', sa.Column('link', sa.String(length=100), nullable=True))
    op.add_column('type', sa.Column('value', sa.String(length=50), nullable=False))
    op.drop_constraint('type_name_key', 'type', type_='unique')
    op.create_unique_constraint(None, 'type', ['value'])
    op.drop_column('type', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('type', sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'type', type_='unique')
    op.create_unique_constraint('type_name_key', 'type', ['name'])
    op.drop_column('type', 'value')
    op.drop_column('template', 'link')
    op.drop_column('task', 'link')
    op.add_column('status', sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'status', type_='unique')
    op.create_unique_constraint('status_name_key', 'status', ['name'])
    op.drop_column('status', 'value')
    op.add_column('skill', sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'skill', type_='unique')
    op.create_unique_constraint('skill_name_key', 'skill', ['name'])
    op.drop_column('skill', 'value')
    op.add_column('grade', sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'grade', type_='unique')
    op.create_unique_constraint('grade_name_key', 'grade', ['name'])
    op.drop_column('grade', 'value')
    op.add_column('direction', sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'direction', type_='unique')
    op.create_unique_constraint('direction_name_key', 'direction', ['name'])
    op.drop_column('direction', 'value')
    # ### end Alembic commands ###
