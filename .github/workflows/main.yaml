name: Alfa workflows

on:
  push:
    branches:
      - main

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_BACKEND }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Create project directory and .env-file
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo rm ${{ secrets.PROJECT_NAME }}/.env
          sudo cat > ${{ secrets.PROJECT_NAME }}/.env << _EOF_
            APP_TITLE=${{ secrets.PROJECT_NAME }}
            DESCRIPTION=${{ secrets.Description }}
            SECRET=${{ secrets.SECRET }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            PROJECT_NAME=${{ secrets.PROJECT_NAME }}
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            MAIL_USERNAME=${{ secrets.EMAIL }}
            MAIL_PASSWORD=${{ secrets.PASSWORD }}
            MAIL_FROM=${{ secrets.EMAIL }}
            MAIL_PORT=${{ secrets.EMAIL_PORT }}
            MAIL_SERVER=${{ secrets.SERVER }}
            MAIL_STARTTLS=${{ secrets.STARTTLS }}
            MAIL_SSL_TLS=${{ secrets.SSL_TLS }}
            USE_CREDENTIALS=${{ secrets.CREDENTIALS }}
            VALIDATE_CERTS=${{ secrets.VALIDATE_CERTS }}
          _EOF_
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd ${{ secrets.PROJECT_NAME }}
          sudo docker stop $(docker ps -qa) && docker rm $(docker ps -qa) && docker rmi -f $(docker images -qa)
          sudo docker compose -f docker-compose-prod.yaml pull
          sudo docker compose -f docker-compose-prod.yaml down
          sudo docker compose -f docker-compose-prod.yaml up -d
